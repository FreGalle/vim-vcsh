set nocompatible

call plug#begin()

let g:plug_shallow = 0

" General plugins

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-obsession -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-obsession'

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-speeddating -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-speeddating'

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-unimpaired -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-unimpaired'

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-repeat -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-repeat'

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-surround -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-surround'

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-vinegar -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-vinegar'

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
Plug 'junegunn/fzf.vim'

let g:fzf_buffers_jump = 1
let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'

"""""""""""""""""""""""""""""""""""
" ----- tpope/vim-fugitive -----
"""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-fugitive'

"""""""""""""""""""""""""""""""""""
" ----- tpope/vim-rhubarb -----
"""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-rhubarb'

"""""""""""""""""""""""""""""""""""
" ----- tpope/vim-abolish -----
"""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-abolish'

"""""""""""""""""""""""""""""""""""
" ----- mileszs/ack.vim -----
"""""""""""""""""""""""""""""""""""
Plug 'mileszs/ack.vim'

let g:ackhighlight = 1
let g:ack_autofold_results = 0
let g:ack_mappings = { "o":  "<CR>zz" }
let g:ack_mappings = { "O":  "<CR>zz<C-W><C-W>:ccl<CR>" }
let g:ack_mappings = { "go": "<CR>zz<C-W>j" }
let g:ack_mappings = { "s": "<C-W><CR><C-W>K" }
let g:ack_mappings = { "S": "<C-W><CR><C-W>K<C-W>b" }
let g:ack_lhandler = "lopen"

if executable("rg")
  let g:ackprg = 'rg --vimgrep --no-heading --column'
  set grepformat^=%f:%l:%c:%m
endif

""""""""""""""""""""""""""""""""""
" ----- jiangmiao/auto-pairs -----
""""""""""""""""""""""""""""""""""
Plug 'jiangmiao/auto-pairs'

let g:AutoPairsCenterLine = 0
let g:AutoPairsMultilineClose = 0

""""""""""""""""""""""""""""""""""
" ----- tpope/vim-commentary -----
""""""""""""""""""""""""""""""""""
Plug 'tpope/vim-commentary'

""""""""""""""""""""""""""""""""""
" ----- fatih/vim-go -----
""""""""""""""""""""""""""""""""""
Plug 'fatih/vim-go'

""""""""""""""""""""""""""""""""""
" ----- AndrewRadev/splitjoin.vim -----
""""""""""""""""""""""""""""""""""
Plug 'AndrewRadev/splitjoin.vim', {'for':'go'}

""""""""""""""""""""""""""""""""""
" ----- airblade/vim-gitgutter -----
""""""""""""""""""""""""""""""""""
Plug 'airblade/vim-gitgutter'

""""""""""""""""""""""""""""""""""
" ----- sjl/badwolf -----
""""""""""""""""""""""""""""""""""
Plug 'sjl/badwolf'

""""""""""""""""""""""""""""""""""
" ----- morhetz/gruvbox -----
""""""""""""""""""""""""""""""""""
Plug 'morhetz/gruvbox'

let g:gruvbox_invert_selection=0

""""""""""""""""""""""""""""""""""
" ----- vim-juvenile -----
""""""""""""""""""""""""""""""""""

Plug 'https://sanctum.geek.nz/code/vim-juvenile.git'

""""""""""""""""""""""""""""""""""
" ----- kshenoy/vim-signature -----
""""""""""""""""""""""""""""""""""
Plug 'kshenoy/vim-signature'

""""""""""""""""""""""""""""""""""
" ----- mihais/vim-mark -----
""""""""""""""""""""""""""""""""""
Plug 'mihais/vim-mark'

nmap <Leader>1 <Plug>MarkSearchGroup1Next
nmap <Leader>2 <Plug>MarkSearchGroup2Next
nmap <Leader>3 <Plug>MarkSearchGroup3Next
nmap <Leader>4 <Plug>MarkSearchGroup4Next
nmap <Leader>5 <Plug>MarkSearchGroup5Next
nmap <Leader>6 <Plug>MarkSearchGroup6Next

""""""""""""""""""""""""""""""""""
" ----- mbbill/undotree -----
""""""""""""""""""""""""""""""""""
Plug 'mbbill/undotree'

let g:undotree_WindowLayout = 2
let g:undotree_SetFocusWhenToggle = 1

""""""""""""""""""""""""""""""""""
" ----- christoomey/vim-tmux-navigator -----
""""""""""""""""""""""""""""""""""
Plug 'christoomey/vim-tmux-navigator'

""""""""""""""""""""""""""""""""""
" ----- edkolev/tmuxline.vim -----
""""""""""""""""""""""""""""""""""

Plug 'edkolev/tmuxline.vim'

""""""""""""""""""""""""""""""""""
" ----- vimwiki/vimwiki -----
""""""""""""""""""""""""""""""""""

Plug 'vimwiki/vimwiki'

let g:vimwiki_list = [{'path': '~/Documents/vimwiki/', 'auto_tags': 1}]
let g:vimwiki_auto_chdir = 1

au BufRead,BufNewFile *.wiki set filetype=vimwiki
au Filetype vimwiki let b:delimitMate_expand_space = 0

au Filetype vimwiki nmap <buffer> <LocalLeader>x <Plug>VimwikiToggleListItem
au Filetype vimwiki nmap <buffer> <LocalLeader>j <Plug>VimwikiDiaryNextDay
au Filetype vimwiki nmap <buffer> <LocalLeader>k <Plug>VimwikiDiaryPrevDay

""""""""""""""""""""""""""""""""""
" ----- junegunn/vim-easy-align -----
""""""""""""""""""""""""""""""""""

Plug 'junegunn/vim-easy-align'

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

""""""""""""""""""""""""""""""""""
" ----- machakann/vim-highlightedyank -----
""""""""""""""""""""""""""""""""""

Plug 'machakann/vim-highlightedyank'

let g:highlightedyank_highlight_duration = 400

""""""""""""""""""""""""""""""""""
" ----- junegunn/vim-easy-align -----
""""""""""""""""""""""""""""""""""

Plug 'junegunn/goyo.vim'

""""""""""""""""""""""""""""""""""
" ----- sheerun/vim-polyglot -----
""""""""""""""""""""""""""""""""""

Plug 'sheerun/vim-polyglot'

let g:polyglot_disabled = ['markdown']
let g:markdown_fenced_languages = ['bash=sh', 'css', 'go', 'json=javascript', 'sql' ]

""""""""""""""""""""""""""""""""""
" ----- b4winckler/vim-angry -----
""""""""""""""""""""""""""""""""""

Plug 'b4winckler/vim-angry'

""""""""""""""""""""""""""""""""""
" ----- vim-big-file-options -----
""""""""""""""""""""""""""""""""""

Plug 'https://sanctum.geek.nz/code/vim-big-file-options.git'

call plug#end()

"
" ----- General settings -----
"

" Load filetype settings, plugins and maps
filetype plugin indent on

" Use syntax highlighting
syntax enable

" set termguicolors

colorscheme gruvbox
set background=dark

" Set default indent settings; tweak on a per-filetype basis
set autoindent    " Use indent of previous line on new lines
set expandtab     " Use spaces instead of tabs
set shiftround    " Indents to multiples of shiftwidth
set shiftwidth=2  " Spaces used for (auto)indent
set smarttab      " Indents by shiftwidth at start of line
set tabstop=2     " Spaces a tab counts for

" Let me backspace over pretty much anything
set backspace+=eol     " Line breaks
set backspace+=indent  " Spaces from 'autoindent'
set backspace+=start   " The start of current insertion

" Indent wrapped lines if supported
if exists('+breakindent')
  set breakindent
  set cpoptions+=n  " Looks better when using cursorline
endif

" Clear default 'comments' value, let the filetype handle it
set comments=

" Add completion options
if exists('+completeopt')
  set completeopt+=longest  " Insert longest common substring
  set completeopt+=menuone  " Show the menu even if only one match
endif

" Give me a prompt instead of just rejecting risky :write, :saveas
set confirm

" Always use UTF-8
  set encoding=utf-8

" Delete comment leaders when joining lines
set formatoptions+=j

" Allow buffers to have changes without being displayed
set hidden

" Keep much more command and search history
set history=2000

" Highlight completed searches
set hlsearch

" Show search matches while typing
set incsearch

" Search ignores case by default; use \C to override
set ignorecase

" Searches are case-sensitive when containing a case
set smartcase

" Search-and-replace incrementally in-place
if has ('nvim')
  set inccommand=nosplit
endif

" Don't assume I'm editing C; let the filetype handle it
set include=

" Don't join lines with two spaces at the end of sentences
set nojoinspaces

" Always show a statusline, even with just one window
set laststatus=2

" Don't redraw the screen during batch execution
set lazyredraw

" Break lines at word boundaries
set linebreak

" Enable and define extra 'list' display characters
set list
set listchars-=eol:$       " Remove default eol entry
set listchars+=extends:>   " Unwrapped text to screen right
set listchars+=precedes:<  " Unwrapped text to screen left
set listchars+=tab:›\      " Tab characters, preserve width
set listchars+=trail:·     " Trailing spaces
set listchars+=nbsp:·      " Non-breaking spaces

" Enable usage of the mouse in all modes
set mouse=a

" Treat numbers with a leading zero as decimal, not octal
set nrformats-=octal

" Options for file search with gf/:find
set path-=/usr/include  " Let the C/C++ filetypes set that
set path+=**            " Search current directory's whole tree

" Show file position in command line
set ruler

" Make sessions usable
if exists('+sessionoptions')
  set sessionoptions-=localoptions  " No buffer options or mappings
  set sessionoptions-=options       " No global options or mappings
endif

" Indicator to use at beginning of wrapped rows
let &showbreak='↳ '

" New windows go below or to the right of a split
set splitright
set splitbelow

" Disable timeout; I don't like having to wait
set notimeout

" Enable timeout on key codes; <esc> exits Insert mode quickly
set ttimeout
set ttimeoutlen=50

" Wildmenu settings; see also plugin/wildignore.vim
set wildmenu               " Use wildmenu
set wildmode=list:longest  " Tab press completes and lists
set wildignorecase         " Case insensitive
set wildcharm=<C-z>        " Set for use in mappings to invoke completion

set noerrorbells
set nonumber
set showcmd
set showmode

set nowrap

set pastetoggle=<F3>

" set relativenumber " seems to slow down neovim

set autoread

set updatetime=250

set showmatch

set nowrapscan

set scrolloff=1
set sidescrolloff=5
set display+=lastline

set textwidth=79
set formatoptions+=q1lncr

set fillchars=vert:\|,stl:\-,stlnc:\-,fold:-,diff:┄

set tags=./.tags,./tags,.tags,tags

set diffopt+=vertical,indent-heuristic,algorithm:patience

" open help vertically
command! -nargs=* -complete=help Help vertical belowright help <args>

"
" "----- Key mappings -----
"

" Comma becomes the new leader
let mapleader=","
let maplocalleader="\\"

nnoremap <Leader>e :edit **/*<C-z><S-Tab>
nnoremap <Leader>f :find **/*<C-z><S-Tab>

" Turn the word under the cursor into a UTC-timestamp
"
" 1. delete inner word into 'z' register
" 2. ??? 'norm i'
" 3. Execute a system command to transform the contents of the z-register to
"    a UTC timestamp.

" Transform the word under the cursor into a UTC-timestamp.
noremap <silent> <Leader>t "zdiw:exe 'norm i' . system("echo <C-R>z \| cut -c1-10 \| TZ=UTC xargs date -R -r")<CR>kJx

" Transform the word under the cursor into a duration (in seconds).
noremap <silent> <Leader>s "zdiw:exe 'norm i' . system("printf '%.3f\n' `echo 'scale=3;<C-R>z/1000000000' \| bc`")<CR>kJx

" Let space function as colon
map <Space> :

" Prevents from going into Ex-mode accidentally
nnoremap Q <Nop>

" Exit insert-mode easily
inoremap jj <ESC>

" When wrapping is on, move cursor by displayed lines instead of file lines
noremap <silent> <expr> j (v:count == 0 ? 'gj' : 'j')
noremap <silent> <expr> k (v:count == 0 ? 'gk' : 'k')

" Search mappings: These will make it so that going to the next one in a
" search will center on the line it's found in.
nnoremap n nzzzv
nnoremap N Nzzzv

" Make < and > keep the selection
vnoremap < <gv
vnoremap > >gv

" Use . in visual mode
vnoremap . :norm.<CR>

" Use sudow when trying to save a file without sufficient privileges
cnoremap w!! w !sudo tee > /dev/null %

" Clear the highlighting of :set hlsearch
nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>

"
" ----- File Type Settings -----
"

au BufNewFile,BufRead *.txt setlocal noet ts=4 sw=4
au BufNewFile,BufRead *.json setlocal ft=json expandtab ts=2 sw=2 tw=0
au BufNewFile,BufRead *.yml,*.yaml setlocal expandtab ts=2 sw=2
au BufNewFile,BufRead *.md setlocal expandtab ts=4 sw=4 sts=4 tw=0
au BufNewFile,BufRead *.go setlocal noet ts=4 sw=4 sts=4

au BufNewFile,BufRead *.md setlocal filetype=markdown
au BufNewFile,BufRead *.yml.tpl setlocal syntax=yaml

au FileType gitcommit setlocal nolist spell
au FileType gitconfig setlocal noet ts=4 sw=4
au FileType json setlocal conceallevel=0 foldmethod=syntax foldlevel=999
au FileType vim setlocal keywordprg=:help
au FileType sh setlocal noet ts=4 sw=4

au BufWritePre *.sql :%s/\s\+$//e

" TODO move to different section

autocmd WinEnter * stopinsert
autocmd VimResized * wincmd =

let g:netrw_banner=0
